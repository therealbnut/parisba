function convertify() {
    var phrase = 'Buttfield-Addison';
    var items = textNodesUnder(document.body);
    for (var i = items.length; i--;) {
        var node = items[i];
        var str = node.textContent;
        var index = str.indexOf(phrase);
        while (index >= 0) {
            var gen = getRandom(wordB) + '-' + getRandom(wordA);
            str = str.slice(0, index) + gen + str.slice(index + phrase.length);
            index = str.indexOf(phrase, index + gen.length);
        }
        node.textContent = str;
    }
}

var wordA = [
'Adamant',
'Adamantium',
'Adamantly',
'Adamiak',
'Adamson',
'Adante',
'Adapt',
'Adaptable',
'Adaptation',
'Adapted',
'Adapter',
'Adaptive',
'Adaytum',
'Adblock',
'Adc',
'Add',
'Add-in',
'Add-on',
'Add-ons',
'Addams',
'Added',
'Addendum',
'Adder',
'Adderall',
'Addict',
'Addicted',
'Addicting',
'Addiction',
'Addictions',
'Addictive',
'Addicts',
'Addidas',
'Addie',
'Addin',
'Adding',
'Addis',
'Addison',
'Addition',
'Additional',
'Additionally',
'Additions',
'Additive',
'Additives',
'Addon',
'Addons',
'Address',
'Addressed',
'Addressee',
'Addressees',
'Addresses',
'Addressing',
'Adds',
'Addwords',
'Adea',
'Adelson',
'Adept',
'Adeq',
'Adequacy',
'Adequate',
'Adequately',
'Ader',
'Adewumi',
'Adexa',
'Adhere',
'Adherence',
'Adhering',
'Adhoc',
'Adi',
'Aditya',
'Adjacent',
'Adjoining',
'Adjourn',
'Adjourned',
'Adjournment',
'Adjudicate',
'Adjudication',
'Adjunct',
'Adjust',
'Adjustable',
'Adjusted',
'Adjusting',
'Adjustment',
'Adler',
'Admin',
'Administer',
'Administered',
'Administering',
'Administration',
'Administrative',
'Administratively',
'Administrator',
'Adminstration',
'Admirable',
'Admiral',
'Admiration',
'Admire',
'Admired',
'Admirer',
'Admission',
'Admit',
'Admitted',
'Admittedly',
'Admitting',
'Admonished',
'Admonition',
'Adolph',
'Adopt',
'Adopted',
'Adopter',
'Adopting',
'Adoption',
'Adorable',
'Adore',
'Adrian',
'Adrienne',
'ADSL',
'Adtran',
'Adult',
'Advance',
'Advanced',
'Advancement',
'Advancer',
'Advances',
'Advancing',
'Advanta',
'Advantage',
'Advantageous',
'Advantages',
'Advent',
'Adventure',
'Adventures',
'Adversarial',
'Adversaries',
'Adverse',
'Adversely',
'Adversity',
'Advertise',
'Advertised',
'Advertisement',
'Advertiser',
'Advertises',
'Advertising',
'Advice',
'Advisable',
'Advise',
'Advised',
'Adviser',
'Advises',
'Advising',
'Advisor',
'Advisory',
'Advocacy',
'Advocate',
'Advocated',
'Advocates',
'Advocating',
'Acamas',
'Achilles',
'Adonis',
'Aeneas',
'Agamemnon',
'Agenor',
'Ajax',
'Alcibiades',
'Alcyone',
'Alexander',
'Anaximandros',
'Andrews',
'Androcles',
'Andromeda',
'Antenor',
'Antigone',
'Aphrodite',
'Apollo',
'Archelochus',
'Archimedes',
'Argus',
'Ariadne',
'Arion',
'Aristarchus',
'Aristides',
'Aristocles',
'Aristotle',
'Artemis',
'Aspasia',
'Athena',
'Atreus',
];
var wordB = [
'Bailey',
'Baker',
'Barnes',
'Bennett',
'Brooks',
'Brown',
'Butler',
'Butt',
'Butta',
'Buttafuoco',
'Buttafuocos',
'Buttar',
'Buttars',
'Buttcam',
'Butte',
'Butted',
'Butter',
'Butterball',
'Butterbean',
'Butterbur',
'Buttercream',
'Buttercup',
'Buttercups',
'Buttered',
'Butterfat',
'Butterfield',
'Butterfields',
'Butterfill',
'Butterfinger',
'Butterfingers',
'Butterfish',
'Butterflied',
'Butterflies',
'Butterfly',
'Butterflyfish',
'Butterflys',
'Butterick',
'Buttering',
'Butterlies',
'Butterly',
'Buttermere',
'Buttermilk',
'Butternut',
'Buttero',
'Butters',
'Butterscotch',
'Butterwick',
'Butterworth',
'Butterworths',
'Buttery',
'Buttes',
'Buttfield',
'Buttfuck',
'Buttfucked',
'Buttfucking',
'Buttfucks',
'Butthead',
'Butthole',
'Buttholes',
'Buttiglione',
'Butting',
'Buttkicker',
'Buttladies',
'Buttle',
'Buttler',
'Buttload',
'Buttman',
'Buttner',
'Butto',
'Buttock',
'Buttocks',
'Buttom',
'Button',
'Buttonboogie',
'Buttonbox',
'Buttoned',
'Buttonhole',
'Buttonholes',
'Buttoning',
'Buttons',
'Buttonstyle',
'Buttonweed',
'Buttonwillow',
'Buttonwood',
'Buttplug',
'Buttram',
'Buttress',
'Buttressed',
'Buttresses',
'Buttressing',
'Buttrey',
'Buttrick',
'Butts',
'Buttstock',
'Buttts',
'Buttwoman',
'Butty',
'Blast',
'Bloody',
];

function getRandom(items) {
    return items[Math.floor(Math.random() * items.length)];
}

function textNodesUnder(el) {
    var n, a = [],
        walk = document.createTreeWalker(el, NodeFilter.SHOW_TEXT, null, false);
    while (n = walk.nextNode()) a.push(n);
    return a;
}

convertify();
